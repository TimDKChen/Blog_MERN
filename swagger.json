{
  "swagger": "2.0",
  "info": {
    "description": "Server that powers the Blog frontend.",
    "version": "1.0.0",
    "title": "Blog CRUD Server",
    "contact": {
      "email": "tim20136202@gmail.com"
    }
  },
  "host": "localhost:5000",
  "basePath": "/api",
  "tags": [
    {
      "name": "Auth",
      "description": "Managing user authentication and authorisation"
    },
    {
      "name": "User",
      "description": "Managing users' details"
    },
    {
      "name": "Post",
      "description": "Managing posts"
    },
    {
      "name": "Category",
      "description": "Managing categories"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Send registration request for a new user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "tim002"
                },
                "email": {
                  "type": "string",
                  "example": "tim002@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "123456789"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "string",
                  "example": "Register successful!"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid input!"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Server error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Given correct user credentials, return token",
        "parameters": [
          {
            "in": "body",
            "name": "",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "tim002@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "123456789"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid input!"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Server error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Invdalidate a particular authorised token",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer [token]",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Internal Server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Server error"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get one user's info",
        "operationId": "getUserById",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer [token]",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User_noToken"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid input!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden response",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Token not found!"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update user's detail",
        "operationId": "updateUserById",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "example": "61c56d557537c247b84d5967"
                },
                "password": {
                  "type": "string",
                  "example": "123456789"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid input!"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Server error!"
                }
              }
            }
          }
        }
      }
    },
    "/posts": {
      "get": {
        "tags": [
          "Post"
        ],
        "summary": "Get all posts",
        "description": "",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Post"
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Server error!"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Post"
        ],
        "summary": "Create an new post",
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer [token]",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Post_noTime"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid input!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden response",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Token not found!"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/posts/{id}": {
      "get": {
        "tags": [
          "Post"
        ],
        "summary": "Get one post",
        "description": "",
        "operationId": "getOnePostById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Post id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "403": {
            "description": "Forbidden response",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Post id not found!"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Post"
        ],
        "summary": "Update an new post",
        "description": "",
        "operationId": "updatePostById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Post id",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer [token]",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Post"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "string",
                  "example": "Post has been updated!"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid input!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden response",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Token or Id not found!"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Post"
        ],
        "summary": "Delete an new post",
        "description": "",
        "operationId": "deletePostById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Post id",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer [token]",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "tim004"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "string",
                  "example": "Post has been deleted!"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid input!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden response",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Token or Id not found!"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Get all categories",
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer [token]",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Fashion"
                },
                "description": {
                  "type": "string",
                  "example": "Some categories"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Category"
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Server error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Category"
        ],
        "summary": "Create an new category",
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer [token]",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Fashion"
                },
                "description": {
                  "type": "string",
                  "example": "Some categories"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "string",
                  "example": "Category has been created!"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid input!"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/categories/{id}": {
      "delete": {
        "tags": [
          "Category"
        ],
        "summary": "Delete a category",
        "description": "",
        "operationId": "deleteCategoryById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Post id",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer [token]",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "string",
                  "example": "Category has been deleted!"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid input!"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRpbTAwN0BnbWFpbC5jb20iLCJpYXQiOjE2NDA0OTY0NzN9.kkwaWlW0fVohIRF7DJgCjmnXQc4F--Jo2LRTpL06z8w"
        },
        "profilePic": {
          "type": "string",
          "example": ""
        },
        "_id": {
          "type": "string",
          "example": "61c6ca4e2a44f622a888daf5"
        },
        "username": {
          "type": "string",
          "example": "tim002"
        },
        "email": {
          "type": "string",
          "example": "tim002@gmail.com"
        }
      }
    },
    "User_noToken": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "61c6ca4e2a44f622a888daf5"
        },
        "profilePic": {
          "type": "string",
          "example": ""
        },
        "username": {
          "type": "string",
          "example": "tim002"
        },
        "email": {
          "type": "string",
          "example": "tim002@gmail.com"
        }
      }
    },
    "Post": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "tim004"
        },
        "title": {
          "type": "string",
          "example": "Forth Blog"
        },
        "description": {
          "type": "string",
          "example": "Some description example"
        },
        "photo": {
          "type": "string",
          "example": ""
        },
        "_id": {
          "type": "string",
          "example": "61c680a030fab30ce878147f"
        },
        "timestamps": {
          "type": "string",
          "example": "2021-12-25T02:22:02.844Z"
        },
        "categories": {
          "type": "string",
          "example": [
            "Fashion",
            "Women"
          ]
        }
      }
    },
    "Post_noTime": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "tim004"
        },
        "title": {
          "type": "string",
          "example": "Forth Blog"
        },
        "description": {
          "type": "string",
          "example": "Some description example"
        },
        "photo": {
          "type": "string",
          "example": ""
        },
        "categories": {
          "type": "string",
          "example": [
            "Fashion",
            "Women"
          ]
        }
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Fashion"
        }
      }
    }
  }
}